generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now()) @map("created_at")
  todos     Todo[]
  lists     List[]
  tags      Tag[]

  @@map("users")
}

model Todo {
  id          Int       @id @default(autoincrement())
  userId      Int       @map("user_id")
  title       String
  description String?
  dueDate     DateTime? @map("due_date")
  priority    String
  isCompleted Boolean   @default(false) @map("is_completed")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @default(now()) @map("updated_at")
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  lists       TodoList[]
  tags        TodoTag[]

  @@map("todos")
}

model List {
  id        Int       @id @default(autoincrement())
  userId    Int       @map("user_id")
  name      String
  color     String?
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @map("updated_at")
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  todos     TodoList[]

  @@map("lists")
}

model TodoList {
  todoId Int  @map("todo_id")
  listId Int  @map("list_id")
  todo   Todo @relation(fields: [todoId], references: [id], onDelete: Cascade)
  list   List @relation(fields: [listId], references: [id], onDelete: Cascade)

  @@id([todoId, listId])
  @@map("todo_lists")
}

model Tag {
  id        Int       @id @default(autoincrement())
  userId    Int       @map("user_id")
  name      String
  color     String?
  createdAt DateTime  @default(now()) @map("created_at")
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  todos     TodoTag[]

  @@map("tags")
}

model TodoTag {
  todoId Int  @map("todo_id")
  tagId  Int  @map("tag_id")
  todo   Todo @relation(fields: [todoId], references: [id], onDelete: Cascade)
  tag    Tag  @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([todoId, tagId])
  @@map("todo_tags")
}
